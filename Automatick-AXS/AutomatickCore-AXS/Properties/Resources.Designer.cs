//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Automatick.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Automatick.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        internal static System.Drawing.Icon Automatic32 {
            get {
                object obj = ResourceManager.GetObject("Automatic32", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        internal static System.Drawing.Icon Automatic481 {
            get {
                object obj = ResourceManager.GetObject("Automatic481", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;head&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;&lt;/head&gt;&lt;body&gt;&lt;table width=&quot;600&quot; style=&quot;border: 1px #d9d9d9 solid; background:no-repeat; background-position:right bottom; border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; align=&quot;center&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td height=&quot;600&quot; valign=&quot;top&quot;&gt;&lt;table width=&quot;600&quot; border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;&lt;table width=&quot;90%&quot; border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string EmailBody {
            get {
                return ResourceManager.GetString("EmailBody", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        internal static System.Drawing.Icon favicon_16x16 {
            get {
                object obj = ResourceManager.GetObject("favicon_16x16", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Flag16Disable {
            get {
                object obj = ResourceManager.GetObject("Flag16Disable", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to var _clientInfo;
        ///		var _session;
        ///		var _beforeChallenge;
        ///
        ///		function loadChallenge(checksum, challengeId, timestamp,input, zeroCount, sessionId, ip) {
        ///		
        ///			_session = {
        ///			userId: &quot;&quot;,
        ///			challengeId: &quot;&quot;,
        ///			timestamp: &quot;&quot;,
        ///			parameters: {  Input :input, ZeroCount:zeroCount},
        ///			checksum: &quot;&quot;,
        ///			sessionId: &quot;&quot;,
        ///			ip: &quot;&quot;,
        ///			solution: &quot;&quot;,
        ///			tags: [],
        ///			stats: {
        ///				duration: 0,
        ///				tries: 1,
        ///				difficulty: &quot;1&quot;,
        ///				userAgent: &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:66.0) Gecko/20 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string QueueITCaptcha4 {
            get {
                return ResourceManager.GetString("QueueITCaptcha4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.IO.UnmanagedMemoryStream similar to System.IO.MemoryStream.
        /// </summary>
        internal static System.IO.UnmanagedMemoryStream TicketFound {
            get {
                return ResourceManager.GetStream("TicketFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to //  Copyright (c) 2015 Worldpay. All rights reserved.
        /////
        /////  License information can be found here: https://github.com/Worldpay/worldpay-cse-lib-javascript/blob/master/LICENSE
        ///
        ///!function (a, b) {
        ///    &quot;use strict&quot;;
        ///    function c(a) {
        ///        throw a
        ///    }
        ///    function d(a, b, d) {
        ///        4 !== b.length &amp;&amp; c(new Oa.exception.invalid(&quot;invalid aes block size&quot;));
        ///        var e = a.b[d]
        ///          , f = b[0] ^ e[0]
        ///          , g = b[d ? 3 : 1] ^ e[1]
        ///          , h = b[2] ^ e[2];
        ///        b = b[d ?  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string WorldPay {
            get {
                return ResourceManager.GetString("WorldPay", resourceCulture);
            }
        }
    }
}
